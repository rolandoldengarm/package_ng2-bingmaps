{"version":3,"sources":["directives/bing-map-info-window.ts"],"names":[],"mappings":"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","file":"directives/bing-map-info-window.js","sourcesContent":["import {Component, SimpleChange, OnDestroy, OnChanges, EventEmitter, ContentChildren, QueryList} from '@angular/core';\r\nimport {InfoWindowManager} from '../services/info-window-manager';\r\nimport {BingMapMarker} from './bing-map-marker';\r\nimport {BingMapInfoWindowAction} from './bing-map-info-window-action';\r\n\r\nlet infoWindowId = 0;\r\n\r\n/**\r\n * BingMapInfoWindow renders a info window inside a {@link BingMapMarker} or standalone.\r\n *\r\n * ### Example\r\n * ```typescript\r\n * import {Component} from '@angular/core';\r\n * import {NG2_BINGMAPS_DIRECTIVES} from 'ng2-bingmaps/core';\r\n *\r\n * @Component({\r\n *  selector: 'my-map-cmp',\r\n *  directives: [NG2_BINGMAPS_DIRECTIVES],\r\n *  styles: [`\r\n *    .bing-map-container {\r\n *      height: 300px;\r\n *    }\r\n * `],\r\n *  template: `\r\n *    <bing-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\r\n *      <bing-map-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\r\n *        <bing-map-info-window [disableAutoPan]=\"true\">\r\n *          Hi, this is the content of the <strong>info window</strong>\r\n *        </bing-map-info-window>\r\n *      </bing-map-marker>\r\n *    </bing-map>\r\n *  `\r\n * })\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'bing-map-info-window',\r\n  inputs: ['latitude', 'longitude', 'disableAutoPan', 'title', 'description'],\r\n  directives: [BingMapInfoWindowAction],\r\n  template: '',\r\n  outputs: ['infoWindowClose']\r\n})\r\n// onclick=\"console.log(window.infoWindow); window.infoWindow.close();return false;\"\r\nexport class BingMapInfoWindow implements OnDestroy,\r\n    OnChanges {\r\n  /**\r\n   * The latitude position of the info window (only usefull if you use it ouside of a {@link\r\n   * SebmGoogleMapMarker}).\r\n   */\r\n  latitude: number;\r\n\r\n  /**\r\n   * The longitude position of the info window (only usefull if you use it ouside of a {@link\r\n   * SebmGoogleMapMarker}).\r\n   */\r\n  longitude: number;\r\n\r\n  /**\r\n   * The title to display in the info window\r\n   */\r\n  title: string;\r\n\r\n  /**\r\n   * The description to display in the info window. \r\n   */\r\n  description: string;\r\n\r\n  /**\r\n   * Disable auto-pan on open. By default, the info window will pan the map so that it is fully\r\n   * visible when it opens.\r\n   */\r\n  disableAutoPan: boolean;\r\n\r\n  /**\r\n   * Maximum width of the infowindow, regardless of content's width. This value is only considered\r\n   * if it is set before a call to open. To change the maximum width when changing content, call\r\n   * close, update maxWidth, and then open.\r\n   */\r\n  maxWidth: number;\r\n\r\n  /**\r\n   * Holds the marker that is the host of the info window (if available)\r\n   */\r\n  hostMarker: BingMapMarker;\r\n\r\n  /**\r\n   * Emits an event when the info window is closed.\r\n   */\r\n  infoWindowClose: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Zero or more actions to show on the info window\r\n   */\r\n  @ContentChildren(BingMapInfoWindowAction) infoWindowActions: QueryList<BingMapInfoWindowAction>;\r\n\r\n  private static _infoWindowOptionsInputs: string[] = ['disableAutoPan', 'maxWidth', 'title', 'description'];\r\n  private _infoWindowAddedToManager: boolean = false;\r\n  private _id: string = (infoWindowId++).toString();\r\n\r\n  constructor(private _infoWindowManager: InfoWindowManager) {}\r\n\r\n  ngAfterContentInit() {\r\n    this._infoWindowManager.addInfoWindow(this);\r\n    this._infoWindowAddedToManager = true;\r\n  }\r\n\r\n  /** @internal */\r\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\r\n    if (!this._infoWindowAddedToManager) {\r\n      return;\r\n    }\r\n    if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\r\n        typeof this.longitude === 'number') {\r\n      this._infoWindowManager.setPosition(this);\r\n    }\r\n    this._setInfoWindowOptions(changes);\r\n  }\r\n\r\n  private _setInfoWindowOptions(changes: {[key: string]: SimpleChange}) {\r\n    let options: {[propName: string]: any} = {};\r\n    let optionKeys = Object.keys(changes).filter(\r\n        k => BingMapInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1);\r\n    optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\r\n    this._infoWindowManager.setOptions(this, options);\r\n  }\r\n\r\n  /**\r\n   * Opens the info window.\r\n   */\r\n  open(): Promise<void> {\r\n    return this._infoWindowManager.open(this);\r\n  }\r\n\r\n  /**\r\n   * Closes the info window.\r\n   */\r\n  close(): Promise<void> {\r\n    return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(void 0); });\r\n  }\r\n\r\n  /** @internal */\r\n  id(): string { return this._id; }\r\n\r\n  /** @internal */\r\n  toString(): string { return 'BingMapInfoWindow-' + this._id.toString(); }\r\n\r\n  /** @internal */\r\n  ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\r\n}\r\n"],"sourceRoot":"/source/"}